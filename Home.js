import { eventList } from './src/data/eventData';
import React, { useState } from 'react';
import {
  Image,
  SafeAreaView,
  ScrollView,
  StyleSheet,
  Text,
  TextInput,
  TouchableOpacity,
  View,
  Dimensions
} from 'react-native';
import { useNavigation } from '@react-navigation/native';

export default function HomeS() {
  const navigation = useNavigation();
  const screenWidth = Dimensions.get('window').width;

  return (
    <SafeAreaView style={styles.safeArea}>
      <ScrollView>
        <View style={styles.header}>
          <Image
            source={require('./assets/img/banners/original.png')}
            style={styles.logo}
            resizeMode="contain"
          />
          <TextInput
            style={styles.searchInput}
            placeholder="T√¨m ki·∫øm s·ª± ki·ªán..."
            placeholderTextColor="#666"
          />
          <View style={styles.searchButton}>
            <Text style={styles.searchButtonText}>T√¨m</Text>
          </View>
        </View>

        <ScrollView horizontal pagingEnabled style={styles.slider}>
          <Image
            source={require('./assets/img/nghien-cuu-khoa-hoc-sinh-vien-truong-dai-hoc-cmc-19.jpg')}
            style={styles.sliderImage}
          />
        </ScrollView>

        <View style={styles.section}>
          <Text style={styles.sectionTitle}>T·∫°i sao ch·ªçn ch√∫ng t√¥i?</Text>
          <View style={styles.featuresContainer}>
            <FeatureItem
              image={require('./assets/img/banners/su_kien_phong_phu.png')}
              title="S·ª∞ KI·ªÜN ƒêA D·∫†NG"
              desc="T·ªï ch·ª©c nhi·ªÅu lo·∫°i s·ª± ki·ªán nh∆∞ h·ªôi th·∫£o, workshop, tri·ªÉn l√£m..."
            />
            <FeatureItem
              image={require('./assets/img/banners/service-promo-7.png')}
              title="ƒêƒÇNG K√ù AN TO√ÄN"
              desc="ƒêƒÉng k√Ω s·ª± ki·ªán b·∫£o m·∫≠t, x√°c nh·∫≠n nhanh qua email ho·∫∑c SMS."
            />
            <FeatureItem
              image={require('./assets/img/banners/thoi_gian_linh_hoat.png')}
              title="TH·ªúI GIAN LINH HO·∫†T"
              desc="L·ªãch tr√¨nh linh ho·∫°t, ph√π h·ª£p khung gi·ªù c·ªßa ng∆∞·ªùi tham gia."
            />
            <FeatureItem
              image={require('./assets/img/banners/service-promo-4.png')}
              title="QU√Ä T·∫∂NG H·∫§P D·∫™N"
              desc="T·∫∑ng voucher, t√†i li·ªáu chuy√™n m√¥n v√† qu√† l∆∞u ni·ªám."
            />
          </View>
        </View>

        <View style={styles.section}>
          <Text style={styles.sectionTitle}>M·ªòT S·ªê DI·ªÑN GI·∫¢ ƒê√ÅNG CH√ö √ù</Text>
          <ScrollView horizontal>
            <SpeakerCard image={require('./assets/img/timcook.jpg')} name="Tim Cook" title="CEO c·ªßa Apple" />
            <SpeakerCard image={require('./assets/img/USAFA_Hosts_Elon_Musk.jpg')} name="Elon Musk" title="CEO Tesla & SpaceX" />
            <SpeakerCard image={require('./assets/img/putin.jpg')} name="Putin" title="T·ªïng th·ªëng Nga" />
            <SpeakerCard image={require('./assets/img/MTP.jpg')} name="S∆°n T√πng M-TP" title="Ca sƒ© & Nh√† s√°ng t·∫°o" />
          </ScrollView>
        </View>

        <View style={styles.section}>
          <Text style={styles.sectionTitle}>S·ª± ki·ªán n·ªïi b·∫≠t</Text>
          <ScrollView horizontal showsHorizontalScrollIndicator={false}>
            {eventList.slice(0, 3).map(event => (
              <View
                key={event.id}
                style={{
                  width: screenWidth * 0.9,
                  backgroundColor: '#fff',
                  borderRadius: 12,
                  padding: 14,
                  marginRight: 16,
                  shadowColor: '#000',
                  shadowOpacity: 0.1,
                  shadowRadius: 6,
                  elevation: 3,
                }}>
                <Image source={event.image} style={{ width: '100%', height: 180, borderRadius: 10 }} />
                <Text style={{ fontWeight: 'bold', fontSize: 18, marginTop: 8 }}>{event.title}</Text>
                <Text style={{ fontSize: 14, color: '#555', marginTop: 8 }}>üïí {new Date(event.start).toLocaleString('vi-VN')}</Text>
                <Text style={{ fontSize: 14, color: '#555', marginTop: 4 }}>üïí {new Date(event.end).toLocaleString('vi-VN')}</Text>
                <Text style={{ fontSize: 14, color: '#555', marginTop: 4 }}>üìç {event.location}</Text>
                <Text style={{ marginTop: 4, fontWeight: 'bold', color: '#e91e63' }}>üíµ {parseInt(event.price).toLocaleString()}‚Ç´</Text>
                <View style={{ flexDirection: 'row', justifyContent: 'space-between', marginTop: 12 }}>
                  <TouchableOpacity
                    style={{ backgroundColor: '#007bff', padding: 10, borderRadius: 6, flex: 1, marginRight: 8 }}
                    onPress={() => navigation.navigate('EventDetail', { event })}>
                    <Text style={{ color: '#fff', textAlign: 'center' }}>Chi ti·∫øt</Text>
                  </TouchableOpacity>
                  <TouchableOpacity
                    style={{ backgroundColor: '#28a745', padding: 10, borderRadius: 6, flex: 1 }}
                    onPress={() => navigation.navigate('EventDetail', { event })}>
                    <Text style={{ color: '#fff', textAlign: 'center' }}>ƒêƒÉng k√Ω</Text>
                  </TouchableOpacity>
                </View>
              </View>
            ))}
          </ScrollView>
        </View>

        <View style={styles.section}>
          <Text style={styles.sectionTitle}>C√¢u h·ªèi th∆∞·ªùng g·∫∑p</Text>
          <FaqItem
            question="T√¥i c√≥ th·ªÉ h·ªßy ƒëƒÉng k√Ω s·ª± ki·ªán n·∫øu kh√¥ng tham gia ƒë∆∞·ª£c kh√¥ng?"
            answer="B·∫°n n√™n ki·ªÉm tra ch√≠nh s√°ch h·ªßy ƒëƒÉng k√Ω c·ªßa s·ª± ki·ªán. Nhi·ªÅu s·ª± ki·ªán cho ph√©p h·ªßy mi·ªÖn ph√≠ trong m·ªôt kho·∫£ng th·ªùi gian nh·∫•t ƒë·ªãnh tr∆∞·ªõc ng√†y di·ªÖn ra."
          />
          <FaqItem
            question="S·ª± ki·ªán c√≥ y√™u c·∫ßu ƒëƒÉng k√Ω tr∆∞·ªõc kh√¥ng?"
            answer="Th√¥ng th∆∞·ªùng, c√°c s·ª± ki·ªán s·∫Ω y√™u c·∫ßu ƒëƒÉng k√Ω tr∆∞·ªõc ƒë·ªÉ ƒë·∫£m b·∫£o ch·ªó ng·ªìi v√† chu·∫©n b·ªã t√†i li·ªáu c·∫ßn thi·∫øt cho ng∆∞·ªùi tham d·ª±."
          />
          <FaqItem
            question="T√¥i c√≥ nh·∫≠n ƒë∆∞·ª£c ch·ª©ng nh·∫≠n khi tham d·ª± s·ª± ki·ªán kh√¥ng?"
            answer="M·ªôt s·ªë s·ª± ki·ªán (ƒë·∫∑c bi·ªát l√† h·ªôi th·∫£o, kh√≥a ƒë√†o t·∫°o) s·∫Ω c·∫•p ch·ª©ng nh·∫≠n tham d·ª±, h√£y h·ªèi r√µ khi ƒëƒÉng k√Ω."
          />
          <FaqItem
            question="Tham d·ª± s·ª± ki·ªán c√≥ m·∫•t ph√≠ kh√¥ng?"
            answer="T√πy v√†o lo·∫°i s·ª± ki·ªán. C√≥ s·ª± ki·ªán ho√†n to√†n mi·ªÖn ph√≠, nh∆∞ng c≈©ng c√≥ nh·ªØng s·ª± ki·ªán y√™u c·∫ßu mua v√© ho·∫∑c ƒë√≥ng ph√≠ ƒëƒÉng k√Ω."
          />
        </View>
      </ScrollView>
    </SafeAreaView>
  );
}

const FeatureItem = ({ image, title, desc }) => (
  <View style={styles.featureItem}>
    <Image source={image} style={styles.featureIcon} />
    <Text style={styles.featureTitle}>{title}</Text>
    <Text style={styles.featureDesc}>{desc}</Text>
  </View>
);

const SpeakerCard = ({ image, name, title }) => (
  <View style={styles.speakerCard}>
    <Image source={image} style={styles.speakerImage} />
    <Text style={styles.speakerName}>{name}</Text>
    <Text style={styles.speakerTitle}>{title}</Text>
  </View>
);

const FaqItem = ({ question, answer }) => {
  const [expanded, setExpanded] = useState(false);
  return (
    <View style={styles.faqItem}>
      <TouchableOpacity onPress={() => setExpanded(!expanded)} style={styles.faqQuestion}>
        <Text style={styles.faqQuestionText}>‚ùì {question}</Text>
      </TouchableOpacity>
      {expanded && (
        <View style={styles.faqAnswer}>
          <Text style={styles.faqAnswerText}>{answer}</Text>
        </View>
      )}
    </View>
  );
};

const styles = StyleSheet.create({
  safeArea: { flex: 1, backgroundColor: '#f8f8f8' },
  header: {
    flexDirection: 'row',
    alignItems: 'center',
    padding: 10,
    backgroundColor: '#8ebad3',
  },
  logo: { width: 120, height: 50, marginRight: 10 },
  searchInput: {
    flex: 1,
    height: 40,
    backgroundColor: '#fff',
    borderRadius: 8,
    paddingHorizontal: 10,
    marginRight: 10,
  },
  searchButton: {
    backgroundColor: '#005f8d',
    paddingVertical: 10,
    paddingHorizontal: 15,
    borderRadius: 8,
  },
  searchButtonText: { color: '#fff', fontWeight: 'bold' },
  slider: { height: 200, backgroundColor: '#ccc' },
  sliderImage: { width: 450, height: 200, resizeMode: 'cover' },
  section: { padding: 16 },
  sectionTitle: {
    fontSize: 22,
    fontWeight: 'bold',
    marginBottom: 12,
    textAlign: 'center',
  },
  featuresContainer: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    justifyContent: 'space-between',
  },
  featureItem: {
    width: '48%',
    backgroundColor: '#fff',
    borderRadius: 10,
    padding: 10,
    marginBottom: 16,
    alignItems: 'center',
  },
  featureIcon: { width: 80, height: 75, marginBottom: 8 },
  featureTitle: { fontWeight: 'bold', fontSize: 16 },
  featureDesc: { fontSize: 14, textAlign: 'center' },
  speakerCard: { width: 160, alignItems: 'center', marginRight: 16 },
  speakerImage: { width: 120, height: 120, borderRadius: 60, marginBottom: 8 },
  speakerName: { fontWeight: 'bold', fontSize: 16 },
  speakerTitle: { fontSize: 14, color: '#777' },
  faqItem: {
    marginBottom: 12,
    borderRadius: 10,
    overflow: 'hidden',
    backgroundColor: '#f4f4f4',
  },
  faqQuestion: { backgroundColor: '#cde1f9', padding: 12 },
  faqQuestionText: { fontSize: 15, fontWeight: 'bold' },
  faqAnswer: {
    padding: 12,
    backgroundColor: '#fff',
    borderTopWidth: 1,
    borderTopColor: '#ccc',
  },
  faqAnswerText: { fontSize: 14, color: '#333' },
});
